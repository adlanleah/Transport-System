package user;

/**
 * Demonstrates Inheritance and Polymorphism
 */

public class TransportOfficer extends User {
    // Private attributes specific to TransportOfficer (Encapsulation)
    private final String officerId;
    private String department;
    private String[] permissions;
    private int yearsOfExperience;
    
    // Constructor
    public TransportOfficer(String userId, String name, String email, String phoneNumber, 
                           String password, String officerId, String department, 
                           String[] permissions, int yearsOfExperience) {
        super(userId, name, email, phoneNumber, password);
        this.officerId = officerId;
        this.department = department;
        this.permissions = permissions;
        this.yearsOfExperience = yearsOfExperience;
    }
    
    // Getter and Setter methods (Encapsulation)
    public String getOfficerId() {
        return officerId;
    }
    
    public String getDepartment() {
        return department;
    }
    
    public String[] getPermissions() {
        return permissions;
    }
    
    public int getYearsOfExperience() {
        return yearsOfExperience;
    }
    
    public void setDepartment(String department) {
        this.department = department;
    }
    
    public void setPermissions(String[] permissions) {
        this.permissions = permissions;
    }
    
    public void setYearsOfExperience(int yearsOfExperience) {
        this.yearsOfExperience = yearsOfExperience;
    }
    
    // Override abstract method from User (Polymorphism)
    @Override
    public String requestTransport(String destination, String time) {
        return "Transport Officer request: " + getName() + " (" + officerId + 
               ") requests official transport to " + destination + " at " + time + 
               " - PRIORITY: Administrative/Official Business";
    }
    
    // Override abstract method from User
    @Override
    public String getUserInfo() {
        return """
               Transport Officer Information:
               Name: """ + getName() + "\n" +
               "Officer ID: " + officerId + "\n" +
               "Department: " + department + "\n" +
               "Years of Experience: " + yearsOfExperience + "\n" +
               "Email: " + getEmail() + "\n" +
               "Permissions: " + String.join(", ", permissions);
    }
    
    // Transport Officer specific methods
    public String manageTransportRequest(String requestId, String action) {
        return "Transport Officer " + getName() + " has " + action + 
               " transport request #" + requestId;
    }
    
    public String assignVehicle(String vehicleId, String route) {
        return "Transport Officer " + getName() + " assigned vehicle " + 
               vehicleId + " to route " + route;
    }
    
    public String generateTransportReport(String period) {
        return "Transport report for " + period + " generated by Officer " + 
               getName() + " (" + officerId + ")";
    }
    
    public boolean hasPermission(String permission) {
        for (String perm : permissions) {
            if (perm.equalsIgnoreCase(permission)) {
                return true;
            }
        }
        return false;
    }
    
    @Override
    public String toString() {
        return "TransportOfficer{" +
                "officerId='" + officerId + '\'' +
                ", name='" + getName() + '\'' +
                ", department='" + department + '\'' +
                ", yearsOfExperience=" + yearsOfExperience +
                ", permissions=" + String.join(", ", permissions) +
                '}';
    }
}